{"version":3,"sources":["D:/work/nasa-images/src/$_lazy_route_resource lazy","D:/work/nasa-images/src/app/app.component.css","D:/work/nasa-images/src/app/app.component.html","D:/work/nasa-images/src/app/app.component.ts","D:/work/nasa-images/src/app/app.module.ts","D:/work/nasa-images/src/app/common/config.ts","D:/work/nasa-images/src/app/common/services/image-search.service.ts","D:/work/nasa-images/src/app/image-dashboard/image-card/image-card.component.css","D:/work/nasa-images/src/app/image-dashboard/image-card/image-card.component.html","D:/work/nasa-images/src/app/image-dashboard/image-card/image-card.component.ts","D:/work/nasa-images/src/app/image-dashboard/image-dashboard.component.css","D:/work/nasa-images/src/app/image-dashboard/image-dashboard.component.html","D:/work/nasa-images/src/app/image-dashboard/image-dashboard.component.ts","D:/work/nasa-images/src/environments/environment.ts","D:/work/nasa-images/src/main.ts"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,yF;;;;;;;ACVA;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,kE;;;;;;;;;;;;;;;;ACA0C;AAO1C,IAAa,YAAY,GAAzB;IALA;QAME,UAAK,GAAG,KAAK,CAAC;IAChB,CAAC;CAAA;AAFY,YAAY;IALxB,wEAAS,CAAC;QACT,QAAQ,EAAE,UAAU;;;KAGrB,CAAC;GACW,YAAY,CAExB;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;ACP+B;AACqB;AACtC;AACgF;AAE1E;AACuC;AACV;AACpB;AAC+B;AAC5B;AAyBzD,IAAa,SAAS,GAAtB;CACC;AADY,SAAS;IAtBrB,uEAAQ,CAAC;QACR,YAAY,EAAE;YACZ,oEAAY;YACZ,2GAAuB;YACvB,4GAAkB;SACnB;QACD,OAAO,EAAE;YACP,gFAAa;YACb,qGAAuB;YACvB,yEAAc,EAAE,wEAAa,EAAE,4EAAiB,EAAE,2EAAgB,EAAE,2EAAgB;YACpF,8EAAgB;SACjB;QACD,SAAS,EAAE;YACT,iGAAkB;YAClB;gBACE,OAAO,EAAE,sEAAc;gBACvB,QAAQ,EAAE,gEAAQ;gBAClB,KAAK,EAAE,KAAK;aACb;SACF;QACD,SAAS,EAAE,CAAC,oEAAY,CAAC;KAC1B,CAAC;GACW,SAAS,CACrB;AADqB;;;;;;;;;;;ACnCqC;AACd;AAEtC,MAAM,cAAc,GAAG,IAAI,qEAAc,CAAC,gBAAgB,CAAC,CAAC;AAAA;AAAA;AAE5D,MAAM,QAAQ,GAAG,8EAAW,CAAC,OAAO,CAAC;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLK;AACN;AACK;AAEN;AACS;AAGnD,IAAa,kBAAkB,GAA/B;IAEE,YAAoB,KAAiB,EACO,QAAgB;QADxC,UAAK,GAAL,KAAK,CAAY;QACO,aAAQ,GAAR,QAAQ,CAAQ;IAC5D,CAAC;IAEM,UAAU,CAAC,KAAa,EAAE,QAAiB,EAAE,MAAe;QACjE,MAAM,MAAM,GAAG,EAAC,CAAC,EAAE,KAAK,EAAC,CAAC;QAC1B,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACb,MAAM,CAAC,YAAY,CAAC,GAAG,QAAQ,CAAC;QAClC,CAAC;QACD,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YACX,MAAM,CAAC,UAAU,CAAC,GAAG,MAAM,CAAC;QAC9B,CAAC;QACD,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CACnB,IAAI,CAAC,QAAQ,EACb;YACE,MAAM,EAAE,MAAM;SACf,CAAC;aACD,IAAI,CAAC,0EAAU,CAAC,GAAG,CAAC,EAAE;YACnB,OAAO,CAAC,KAAK,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC;YACjC,MAAM,CAAC,mEAAU,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;QAC7B,CAAC,CACF,CAAC,CAAC;IACP,CAAC;IAEM,kBAAkB,CAAC,GAAW;QACnC,EAAE,CAAC,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC;YAChB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAyB,GAAG,CAAC;iBAC/C,IAAI,CAAC,0EAAU,CAAC,GAAG,CAAC,EAAE;gBACnB,OAAO,CAAC,KAAK,CAAC,oBAAoB,EAAE,GAAG,CAAC,CAAC;gBACzC,MAAM,CAAC,mEAAU,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;YAC7B,CAAC,CACF,CAAC,CAAC;QACP,CAAC;QAAC,IAAI,CAAC,CAAC;YAAC,MAAM,CAAC,mEAAU,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;QAAC,CAAC;IACxC,CAAC;CAEF;AArCY,kBAAkB;IAD9B,yEAAU,EAAE;IAIE,gFAAM,CAAC,+DAAc,CAAC;qCADR,wEAAU;GAF1B,kBAAkB,CAqC9B;AArC8B;;;;;;;;ACR/B;AACA;;;AAGA;AACA,mCAAoC,mBAAmB,KAAK,kBAAkB,oBAAoB,KAAK,yBAAyB,mBAAmB,KAAK,wBAAwB,wBAAwB,8BAA8B,oBAAoB,KAAK,kCAAkC,iCAAiC,gCAAgC,KAAK,oBAAoB,0BAA0B,yBAAyB,8BAA8B,mBAAmB,KAAK,uBAAuB,uBAAuB,oBAAoB,KAAK,qBAAqB,kBAAkB,mBAAmB,oBAAoB,KAAK;;AAE9nB;;;AAGA;AACA,2C;;;;;;;ACXA,qKAAqK,yBAAyB,KAAK,yBAAyB,4CAA4C,uCAAuC,qb;;;;;;;;;;;;;;;;;;;ACAxP;AASvD,IAAa,kBAAkB,GAA/B;IAKE,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;CAEF;AAPC;IADC,oEAAK,EAAE;;qDACwB;AAHrB,kBAAkB;IAL9B,wEAAS,CAAC;QACT,QAAQ,EAAE,iBAAiB;;;KAG5B,CAAC;;GACW,kBAAkB,CAU9B;AAV8B;;;;;;;;ACT/B;AACA;;;AAGA;AACA,wCAAyC,uBAAuB,uBAAuB,kBAAkB,KAAK,6BAA6B,kBAAkB,KAAK,oBAAoB,mBAAmB,KAAK,gCAAgC,SAAS,sBAAsB,yBAAyB,iBAAiB,gBAAgB,+BAA+B,uBAAuB,yBAAyB,uBAAuB,KAAK;;AAElb;;;AAGA;AACA,2C;;;;;;;ACXA,2gCAA2gC,eAAe,MAAM,eAAe,ga;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAp/B;AACgB;AAChC;AAEN;AAIb;AACQ;AACO;AACF;AACC;AACL;AACC;AAIlC,MAAM,UAAU,GAAG,QAAQ,CAAC;AAO5B,IAAa,uBAAuB,GAApC;IAiBE,YAAY,mBAAuC;QAV5C,YAAO,GAAG,IAAI,6DAAO,EAAU,CAAC;QAChC,eAAU,GAAG,IAAI,6DAAO,EAAU,CAAC;QACnC,aAAQ,GAAG,IAAI,6DAAO,EAAU,CAAC;QACjC,eAAU,GAAG,IAAI,6DAAO,EAAU,CAAC;QAInC,kBAAa,GAAG,CAAC,CAAC;QAIvB,IAAI,CAAC,kBAAkB,GAAG,mBAAmB,CAAC;IAChD,CAAC;IAED,6BAA6B,CAAC,MAA8B;QAC1D,EAAE,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;YAC5B,MAAM,QAAQ,GAAG,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,KAAK,MAAM,CAAC,CAAC;YACjG,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACb,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAC;YAChC,CAAC;QACH,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACvB,CAAC;QACD,MAAM,eAAe,GAAG,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,MAAM,CACpD,CAAC,IAAmB,EAAE,EAAE;YACtB,MAAM,YAAY,GAAG,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,OAAO,CAAC,MAAM,KAAK,OAAO,CAAC,KAAK,SAAS,CAAC;YAC1G,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;gBAClB,IAAI,CAAC,aAAa,EAAE,CAAC;YACvB,CAAC;YACD,MAAM,CAAC,YAAY,CAAC;QACtB,CAAC,CACF,CAAC;QACF,MAAM,CAAC,mEAAU,CAAC,EAAE,CAAC,eAAe,CAAC,CAAC;IACxC,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,UAAU,CAAC;QAC5B,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CACzC,yEAAS,CAAC,UAAU,CAAC,EACrB,6EAAa,CACX,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,yEAAS,CAAC,IAAI,CAAC,CAAC,EACrC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,yEAAS,CAAC,IAAI,CAAC,CAAC,EACnC,CAAC,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,EAAE,CAAC,CAAC,EAAC,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAC,CAAC,CACzD,EACD,4EAAY,CAAC,GAAG,CAAC,EACjB,yEAAS,CAAC,CAAC,EAAC,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAC,EAAE,EAAE,CAAC,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,KAAK,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC,EACrG,mEAAG,CAAC,CAAC,MAA8B,EAAE,EAAE;YACrC,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,UAAU,CAAC;QAC7D,CAAC,CAAC,EACF,yEAAS,CAAC,IAAI,CAAC,6BAA6B,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EACxD,0EAAU,CAAC,CAAC,GAAG,EAAE,EAAE;YACjB,OAAO,CAAC,KAAK,CAAC,yBAAyB,EAAE,GAAG,CAAC,CAAC;YAC9C,MAAM,CAAC,mEAAU,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;QAC7B,CAAC,CAAC,CACH,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;YAClB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACtB,CAAC,CAAC,CAAC;QAGH,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAC9C,oFAAoB,EAAE,EACtB,yEAAS,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,IAAI,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC,EAC7E,yEAAS,CAAC,IAAI,CAAC,6BAA6B,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CACzD,CAAC,SAAS,CAAC,CAAC,MAAuB,EAAE,EAAE;YACtC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAC3C,CAAC,CAAC,CAAC;QAGH;;;;;kDAK0C;IAC5C,CAAC;IAED,YAAY,CAAC,KAAa;QACxB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC3B,CAAC;IAED,aAAa,CAAC,KAAa,EAAE,KAAc;QACzC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACV,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC9B,CAAC;IACH,CAAC;IAED,WAAW,CAAC,KAAa,EAAE,KAAc;QACvC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACV,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC5B,CAAC;IACH,CAAC;IAED,QAAQ,CAAC,MAAM;QACb,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,IAAI,MAAM,CAAC,MAAM,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,YAAY,GAAG,GAAG,IAAI,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC;YAC9G,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAClB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACtC,CAAC;QACH,CAAC;IACH,CAAC;IAEM,WAAW;QAChB,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,CAAC;QACtC,IAAI,CAAC,oBAAoB,CAAC,WAAW,EAAE,CAAC;IAC1C,CAAC;CACF;AA/GY,uBAAuB;IALnC,wEAAS,CAAC;QACT,QAAQ,EAAE,sBAAsB;;;KAGjC,CAAC;qCAkBiC,iGAAkB;GAjBxC,uBAAuB,CA+GnC;AA/GmC;;;;;;;;;ACzBpC,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;AAEzE,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,OAAO,EAAE,oCAAoC;CAC9C,CAAC;AAAA;AAAA;;;;;;;;;;;;;;ACR6C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,8EAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,+EAAc,EAAE,CAAC;AACnB,CAAC;AAED,yGAAsB,EAAE,CAAC,eAAe,CAAC,kEAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/work/nasa-images/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/work/nasa-images/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<nasa-image-dashboard></nasa-image-dashboard>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/work/nasa-images/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/work/nasa-images/src/app/app.component.ts","import {BrowserModule} from '@angular/platform-browser';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {NgModule} from '@angular/core';\nimport {MatCardModule, MatDividerModule, MatGridListModule, MatInputModule, MatTooltipModule} from '@angular/material';\n\nimport {AppComponent} from './app.component';\nimport {ImageDashboardComponent} from './image-dashboard/image-dashboard.component';\nimport {ImageSearchService} from './common/services/image-search.service';\nimport {HttpClientModule} from '@angular/common/http';\nimport {ImageCardComponent} from './image-dashboard/image-card/image-card.component';\nimport {BASE_URL, BASE_URL_TOKEN} from './common/config';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ImageDashboardComponent,\n    ImageCardComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatInputModule, MatCardModule, MatGridListModule, MatTooltipModule, MatDividerModule,\n    HttpClientModule\n  ],\n  providers: [\n    ImageSearchService,\n    {\n      provide: BASE_URL_TOKEN,\n      useValue: BASE_URL,\n      multi: false\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/work/nasa-images/src/app/app.module.ts","import {environment} from '../../environments/environment';\r\nimport {InjectionToken} from '@angular/core';\r\n\r\nexport const BASE_URL_TOKEN = new InjectionToken('BASE_URL_TOKEN');\r\n\r\nexport const BASE_URL = environment.baseUrl;\r\n\n\n\n// WEBPACK FOOTER //\n// D:/work/nasa-images/src/app/common/config.ts","import {Inject, Injectable} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {HttpClient} from '@angular/common/http';\nimport {NasaImagesSearchResult} from '../classes/nasa-images';\nimport {catchError} from 'rxjs/operators';\nimport {BASE_URL, BASE_URL_TOKEN} from '../config';\n\n@Injectable()\nexport class ImageSearchService {\n\n  constructor(private _http: HttpClient,\n              @Inject(BASE_URL_TOKEN) private _baseUrl: string) {\n  }\n\n  public getImages$(query: string, yearFrom?: string, yearTo?: string): Observable<NasaImagesSearchResult> {\n    const params = {q: query};\n    if (yearFrom) {\n      params['year_start'] = yearFrom;\n    }\n    if (yearTo) {\n      params['year_end'] = yearTo;\n    }\n    return this._http.get<NasaImagesSearchResult>(\n      this._baseUrl,\n      {\n        params: params\n      })\n      .pipe(catchError(err => {\n          console.error('getImages$', err);\n          return Observable.of(null);\n        }\n      ));\n  }\n\n  public getImagesNextPage$(url: string): Observable<NasaImagesSearchResult> {\n    if (url != null) {\n      return this._http.get<NasaImagesSearchResult>(url)\n        .pipe(catchError(err => {\n            console.error('getImagesNextPage$', err);\n            return Observable.of(null);\n          }\n        ));\n    } else { return Observable.of(null); }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/work/nasa-images/src/app/common/services/image-search.service.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".mat-card{\\r\\n  margin: 15px;\\r\\n}\\r\\n.example-card{\\r\\n  height: 600px;\\r\\n}\\r\\n.example-card-header{\\r\\n  height: 20px;\\r\\n}\\r\\n.example-card-image{\\r\\n  max-height: 400px;\\r\\n  width: calc(90% - 10px);\\r\\n  padding: 24px;\\r\\n}\\r\\n.example-card-image-container{\\r\\n  -ms-flex-line-pack: center;\\r\\n      align-content: center;\\r\\n}\\r\\n.mat-card-title{\\r\\n  white-space: nowrap;\\r\\n  overflow-x: hidden;\\r\\n  text-overflow: ellipsis;\\r\\n  width: 300px;\\r\\n}\\r\\n.image-description{\\r\\n  overflow-y: auto;\\r\\n  height: 150px;\\r\\n}\\r\\n.nasa-image-card{\\r\\n  width: 100%;\\r\\n  height: 100%;\\r\\n  padding: 10px;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/work/nasa-images/src/app/image-dashboard/image-card/image-card.component.css\n// module id = ../../../../../src/app/image-dashboard/image-card/image-card.component.css\n// module chunks = main","module.exports = \"<mat-card class=\\\"example-card\\\" *ngIf=\\\"imageItem.links\\\">\\n  <mat-card-header class=\\\"example-card-header\\\">\\n    <mat-card-title matTooltip=\\\"{{imageItem.data[0].title}}\\\">{{imageItem.data[0].title}}</mat-card-title>\\n    <mat-card-subtitle>{{imageItem.data[0].date_created | date}}</mat-card-subtitle>\\n  </mat-card-header>\\n  <img class=\\\"example-card-image\\\" mat-card-image [src]=\\\"imageItem.links[0]?.href\\\" alt=\\\"Image not found\\\">\\n  <mat-card-content>\\n    <p class=\\\"image-description\\\" [innerHTML]=\\\"imageItem.data[0].description\\\">\\n    </p>\\n  </mat-card-content>\\n<!--  <mat-card-actions>\\n    <button mat-button>LIKE</button>\\n    <button mat-button>SHARE</button>\\n  </mat-card-actions>-->\\n</mat-card>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/work/nasa-images/src/app/image-dashboard/image-card/image-card.component.html\n// module id = ../../../../../src/app/image-dashboard/image-card/image-card.component.html\n// module chunks = main","import {Component, Input, OnInit} from '@angular/core';\nimport {NasaImageItem} from '../../common/classes/nasa-image-item';\nimport {NasaImageData} from '../../common/classes/nasa-image-data';\n\n@Component({\n  selector: 'nasa-image-card',\n  templateUrl: './image-card.component.html',\n  styleUrls: ['./image-card.component.css']\n})\nexport class ImageCardComponent implements OnInit {\n\n  @Input()\n  public imageItem: NasaImageItem;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/work/nasa-images/src/app/image-dashboard/image-card/image-card.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".example-form {\\r\\n  min-width: 150px;\\r\\n  max-width: 500px;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.example-full-width {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.year-field{\\r\\n  width: 100px;\\r\\n}\\r\\n\\r\\n.search-filter-controls{\\r\\n\\r\\n}\\r\\n\\r\\n.results-list{\\r\\n  position: absolute;\\r\\n  top: 120px;\\r\\n  bottom: 0;\\r\\n  width: calc(100% - 10px);\\r\\n  overflow-y: auto;\\r\\n  overflow-x: hidden;\\r\\n  margin-top: 30px;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/work/nasa-images/src/app/image-dashboard/image-dashboard.component.css\n// module id = ../../../../../src/app/image-dashboard/image-dashboard.component.css\n// module chunks = main","module.exports = \"<div class=\\\"search-filter-controls\\\">\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput name=\\\"searchQuery\\\"\\n           #searchQuery\\n           placeholder=\\\"Type something like 'Jupiter', 'Venus', 'NGC', etc.\\\"\\n           [value]=\\\"initValue\\\"\\n           (input)=\\\"onQueryInput(searchQuery.value)\\\">\\n  </mat-form-field>\\n  <mat-form-field class=\\\"year-field\\\">\\n    <input matInput value=\\\"\\\" name=\\\"yearFrom\\\" #yearFrom\\n           type=\\\"number\\\"\\n           placeholder=\\\"Year from\\\"\\n           [max]=\\\"yearTo.value\\\"\\n           [min]=\\\"1950\\\"\\n           (input)=\\\"onSetYearFrom(yearFrom.value, yearFrom.checkValidity())\\\">\\n  </mat-form-field>\\n  <mat-form-field class=\\\"year-field\\\">\\n    <input matInput value=\\\"\\\" name=\\\"yearTo\\\" #yearTo\\n           type=\\\"number\\\"\\n           placeholder=\\\"Year to\\\"\\n           [max]=\\\"2018\\\"\\n           [min]=\\\"yearFrom.value\\\"\\n           (input)=\\\"onSetYearTo(yearTo.value, yearTo.checkValidity())\\\">\\n  </mat-form-field>\\n  <span>Loaded {{images.length}} of {{allItemsCount}} images.</span>\\n</div>\\n<mat-divider></mat-divider>\\n<div class=\\\"results-list scroll\\\" (scroll)=\\\"onScroll($event)\\\">\\n  <mat-grid-list cols=\\\"4\\\" rowHeight=\\\"700px\\\">\\n    <mat-grid-tile\\n      *ngFor=\\\"let item of images\\\"\\n      [colspan]=\\\"1\\\"\\n      [rowspan]=\\\"1\\\">\\n      <nasa-image-card class=\\\"nasa-image-card\\\" [imageItem]=\\\"item\\\"></nasa-image-card>\\n    </mat-grid-tile>\\n  </mat-grid-list>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/work/nasa-images/src/app/image-dashboard/image-dashboard.component.html\n// module id = ../../../../../src/app/image-dashboard/image-dashboard.component.html\n// module chunks = main","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {ImageSearchService} from '../common/services/image-search.service';\nimport {Observable} from 'rxjs/Observable';\nimport {NasaImagesSearchResult} from '../common/classes/nasa-images';\nimport {Subject} from 'rxjs/Subject';\nimport {\n  catchError, debounceTime, switchMap, combineLatest, startWith, concatAll, concat, bufferWhen,\n  distinctUntilChanged, tap\n} from 'rxjs/operators';\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/observable/fromEvent';\nimport 'rxjs/add/operator/takeUntil';\nimport 'rxjs/add/observable/interval';\nimport 'rxjs/add/operator/mapTo';\nimport 'rxjs/add/operator/reduce';\nimport {NasaImageItem} from '../common/classes/nasa-image-item';\nimport {Subscription} from 'rxjs/Subscription';\n\nconst INIT_VALUE = 'Planet';\n\n@Component({\n  selector: 'nasa-image-dashboard',\n  templateUrl: './image-dashboard.component.html',\n  styleUrls: ['./image-dashboard.component.css']\n})\nexport class ImageDashboardComponent implements OnInit, OnDestroy {\n\n  public imageSearchService: ImageSearchService;\n\n  public images: NasaImageItem[];\n  private imagesSubscription: Subscription;\n\n  public query$$ = new Subject<string>();\n  public yearFrom$$ = new Subject<string>();\n  public yearTo$$ = new Subject<string>();\n  public nextPage$$ = new Subject<string>();\n  private nextPageSubscription: Subscription;\n\n  public nextPage: string;\n  public allItemsCount = 0;\n  public initValue: string;\n\n  constructor(_imageSearchService: ImageSearchService) {\n    this.imageSearchService = _imageSearchService;\n  }\n\n  mapNasaImagesToNasaImageItems(result: NasaImagesSearchResult) {\n    if (result.collection.links) {\n      const nextLink = result.collection.links.find((element, index, array) => element.rel === 'next');\n      if (nextLink) {\n        this.nextPage = nextLink.href;\n      }\n    } else {\n      this.nextPage = null;\n    }\n    const itemsWithImages = result.collection.items.filter(\n      (item: NasaImageItem) => {\n        const hasImageLink = item.links && item.links.find((element) => element.render === 'image') !== undefined;\n        if (!hasImageLink) {\n          this.allItemsCount--;\n        }\n        return hasImageLink;\n      }\n    );\n    return Observable.of(itemsWithImages);\n  }\n\n  ngOnInit() {\n    this.initValue = INIT_VALUE;\n    this.imagesSubscription = this.query$$.pipe(\n      startWith(INIT_VALUE),\n      combineLatest(\n        this.yearFrom$$.pipe(startWith(null)),\n        this.yearTo$$.pipe(startWith(null)),\n        (query, yearFrom, yearTo) => ({query, yearFrom, yearTo})\n      ),\n      debounceTime(500),\n      switchMap(({query, yearFrom, yearTo}) => this.imageSearchService.getImages$(query, yearFrom, yearTo)),\n      tap((result: NasaImagesSearchResult) => {\n        this.allItemsCount = result.collection.metadata.total_hits;\n      }),\n      switchMap(this.mapNasaImagesToNasaImageItems.bind(this)),\n      catchError((err) => {\n        console.error('imageSearchServiceError', err);\n        return Observable.of(null);\n      })\n    ).subscribe(value => {\n      this.images = value;\n    });\n\n\n    this.nextPageSubscription = this.nextPage$$.pipe(\n      distinctUntilChanged(),\n      switchMap((nextPage) => this.imageSearchService.getImagesNextPage$(nextPage)),\n      switchMap(this.mapNasaImagesToNasaImageItems.bind(this)),\n    ).subscribe((images: NasaImageItem[]) => {\n      this.images = this.images.concat(images);\n    });\n\n\n    /*   const clicksInFiveSeconds = Observable.fromEvent(document, 'click')\n             .takeUntil(Observable.interval(5000));\n        const ones = clicksInFiveSeconds.mapTo(1);\n        const seed = 0;\n        const count = ones.reduce((acc, one) => acc + one, seed);\n       count.subscribe(x => console.log(x));*/\n  }\n\n  onQueryInput(value: string) {\n    this.query$$.next(value);\n  }\n\n  onSetYearFrom(value: string, valid: boolean) {\n    if (valid) {\n      this.yearFrom$$.next(value);\n    }\n  }\n\n  onSetYearTo(value: string, valid: boolean) {\n    if (valid) {\n      this.yearTo$$.next(value);\n    }\n  }\n\n  onScroll($event) {\n    if (this.nextPage && $event.target.scrollTop + $event.target.clientHeight + 200 >= $event.target.scrollHeight) {\n      if (this.nextPage) {\n        this.nextPage$$.next(this.nextPage);\n      }\n    }\n  }\n\n  public ngOnDestroy() {\n    this.imagesSubscription.unsubscribe();\n    this.nextPageSubscription.unsubscribe();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/work/nasa-images/src/app/image-dashboard/image-dashboard.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false,\n  baseUrl: 'https://images-api.nasa.gov/search'\n};\n\n\n\n// WEBPACK FOOTER //\n// D:/work/nasa-images/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// D:/work/nasa-images/src/main.ts"],"sourceRoot":"webpack:///"}